#s3-mock
- request:
    method: GET
    url: ^/s3-version-mock$

  response:
    status: 200
    headers:
      content-type: text/plain
    body: >
      dev-test

#s3-tree
- request:
    method: GET
    url: ^/tree/tree.json$

  response:
    status: 200
    headers:
      content-type: application/json
    body: >
      {
        "commands": [
          {
            "usage": "aws",
            "help": "Apply Aws objects",
            "parent": "root",
            "roles" : ["USER"]
          },
          {
            "usage": "apply",
            "help": "Apply Aws objects",
            "parent": "root_aws",
            "roles" : ["USER"]
          },
          {
            "usage": "terraform",
            "help": "Apply Aws terraform objects",
            "formula": {
              "path": "aws/terraform",
              "bin": "terraform-cli-${so}",
              "bundle": "${so}.zip",
              "repoUrl": "https://commons-repo.ritchiecli.io/formulas"
            },
            "parent": "root_aws_apply",
            "roles" : ["USER"]
          },
          {
            "usage": "kafka",
            "help": "Kafka commands",
            "parent": "root",
            "roles" : ["RIT_KAFKA"]
          },
          {
            "usage": "create",
            "help": "Kafka create commands",
            "parent": "root_kafka",
            "roles" : ["RIT_KAFKA"]
          },
          {
            "usage": "topic",
            "help": "Create kafka topics",
            "formula": {
              "path": "kafka",
              "bin": "kafka-${so}",
              "bundle": "${so}.zip",
              "config": "create-topic-config.json",
              "repoUrl": "https://commons-repo.ritchiecli.io/formulas"
            },
            "parent": "root_kafka_create",
            "roles" : ["RIT_KAFKA"]
          },
          {
            "usage": "scaffold",
            "help": "Manipulate scaffold objects",
            "parent": "root"
          },
          {
            "usage": "generate",
            "help": "Generates a scaffold by some template",
            "parent": "root_scaffold"
          },
          {
            "usage": "coffee-go",
            "help": "Generates a project by coffee template in Go",
            "formula": {
              "path": "scaffold/coffee-go",
              "bin": "coffee-go-${so}",
              "bundle": "${so}.zip",
              "repoUrl": "https://commons-repo.ritchiecli.io/formulas"
            },
            "parent": "root_scaffold_generate"
          }
        ],
        "version": "1.0.0"
      }

#s3-formulas-config.json
- request:
    method: GET
    url: ^/formulas/aws/terraform/config.json$

  response:
    status: 200
    headers:
      content-type: application/json
    body: >
      {
        "description": "Apply terraform on AWS",
        "inputs": [
          {
            "name": "repository",
            "type": "text",
            "default": "https://github.com/zup/terraform-mock",
            "label": "Select your repository URL: ",
            "items": [
              "https://github.com/zup/mock-1",
              "https://github.com/zup/mock-2"
            ]
          },
          {
            "name": "terraform_path",
            "type": "text",
            "default": "src",
            "label": "Type your terraform files path [src]: "
          },
          {
            "name": "environment",
            "type": "text",
            "label": "Type your environment name: [ex.: qa, prod]"
          },
          {
            "name": "git_user",
            "type": "CREDENTIAL_GITHUB_USERNAME"
          },
          {
            "name": "git_token",
            "type": "CREDENTIAL_GITHUB_TOKEN"
          },
          {
            "name": "aws_access_key_id",
            "type": "CREDENTIAL_AWS_ACCESSKEYID"
          },
          {
            "name": "aws_secret_access_key",
            "type": "CREDENTIAL_AWS_SECRETACCESSKEY"
          }
        ]
      }

#s3-formulas-zip
- request:
    method: GET
    url: ^/formulas/aws/terraform/linux.zip$

  response:
    status: 200
    headers:
      content-type: application/zip
    file: response.zip